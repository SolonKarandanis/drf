# Generated by Django 5.1.5 on 2025-09-29 10:26

import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=120)),
                ('type', models.CharField(choices=[('attribute.type.single', 'Single'), ('attribute.type.multiple', 'Multiple')], db_default='attribute.type.single', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(null=True)),
                ('is_active', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('attribute.type.single', 'Single'), ('attribute.type.multiple', 'Multiple')], db_default='attribute.type.single', max_length=40)),
                ('description', models.TextField(blank=True)),
                ('promo_reduction', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('is_schedule', models.BooleanField(default=False)),
                ('discount_start', models.DateTimeField()),
                ('discount_end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AttributeOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_name', models.CharField(default=None, max_length=120)),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attribute_options', to='products.attribute')),
            ],
            options={
                'verbose_name_plural': 'Attribute Options',
                'db_table': 'products_attribute_options',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(default=None, max_length=120)),
                ('title', models.CharField(max_length=120)),
                ('content', models.TextField(blank=True, null=True)),
                ('fabric_details', models.TextField(blank=True, null=True)),
                ('care_instructions', models.TextField(blank=True, null=True)),
                ('price', models.FloatField()),
                ('public', models.BooleanField(db_default=True)),
                ('inventory', models.IntegerField(blank=True, null=True)),
                ('number_sold', models.IntegerField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.UUID('a4cda112-3bf2-467d-8cd3-33819f89387a'))),
                ('search', models.GeneratedField(db_persist=True, expression=django.contrib.postgres.search.SearchVector('sku', 'title', 'content', 'fabric_details', 'care_instructions', config='english'), output_field=django.contrib.postgres.search.SearchVectorField())),
                ('published_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('publish_status', models.CharField(choices=[('product.status.published', 'Published'), ('product.status.scheduled', 'Scheduled')], db_default='product.status.published', max_length=40)),
                ('availability_status', models.CharField(choices=[('product.availability.in.stock', 'In Stock'), ('product.availability.out.of.stock', 'Out Of Stock')], db_default='product.availability.in.stock', max_length=40)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('number_of_ratings', models.IntegerField(blank=True, null=True)),
                ('brand', models.ForeignKey(db_default=1, on_delete=django.db.models.deletion.PROTECT, to='products.brand')),
                ('categories', models.ManyToManyField(related_name='product', to='products.category')),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['sku'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value_method', models.CharField(blank=True, default=None, max_length=120, null=True)),
                ('attribute_value', models.FloatField(blank=True, null=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.attribute')),
                ('attribute_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.attributeoptions')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'verbose_name_plural': 'Product Attribute Values',
                'db_table': 'products_attribute_values',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='attributes',
            field=models.ManyToManyField(through='products.ProductAttributeValues', to='products.attribute'),
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductsDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('price_override', models.BooleanField(default=False)),
                ('discount_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.discount')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'verbose_name_plural': 'Products Discounts',
                'db_table': 'products_product_discount',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='product_sku'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['uuid'], name='product_uuid'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['user_id'], name='product_user_id'),
        ),
        migrations.AddConstraint(
            model_name='productsdiscount',
            constraint=models.UniqueConstraint(fields=('product_id', 'discount_id'), name='one_discount_per_product'),
        ),
    ]
